@page "/setting"
@namespace SwashbucklerDiary.Rcl.Pages
@inherits ImportantComponentBase

<MyAppBar Title="@(I18n.T("Mine.Settings"))"
          OnClick="NavigateToBack">
</MyAppBar>

<ScrollContainer>
    <div class="text-h6 setting-title">
        @(I18n.T("Setting.General.Name"))
    </div>

    <MCard Class="list-item-card"
           Elevation="0"
           Rounded="@("lg")">
        <MList>
            <MListItem OnClick="@(()=>To("permissionSetting"))">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-account-cog-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.General.Permission.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>

            <MDivider Class="mx-3"></MDivider>

            <MListItem OnClick="@(()=>showClearCache=true)">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-trash-can-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.General.Storage.Name"))
                </MListItemContent>
                <MListItemContent Class="setting-state">
                    <MListItemSubtitle>
                        @cacheSize
                    </MListItemSubtitle>
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
        </MList>
    </MCard>

    <div class="text-h6 setting-title">
        @(I18n.T("Setting.Display.Name"))
    </div>

    <MCard Class="list-item-card"
           Elevation="0"
           Rounded="@("lg")">
        <MList>
            <MListItem OnClick="@(()=>To("indexSetting"))">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-home-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.Display.Index.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
            <MDivider Class="mx-3"></MDivider>
            <MListItem OnClick="@(()=>To("diarySetting"))">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-notebook-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.Display.Diary.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
            <MDivider Class="mx-3"></MDivider>
            <MListItem OnClick="@(()=>To("alertSetting"))">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-alert-box-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.Display.Alert.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
            <MDivider Class="mx-3"></MDivider>
            <MListItem OnClick="@(()=>To("diaryCardSetting"))">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-card-text-outline
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.Display.DiaryCard.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
            <MDivider Class="mx-3 hidden-sm-and-down"></MDivider>
            <MListItem Class="hidden-sm-and-down">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-chart-line
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("Setting.Display.StatisticsCard.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MSwitch @bind-Value="showStatisticsCard"
                             TValue="bool"
                             OnChange="SettingChange(Setting.StatisticsCard)"
                             Dense="true"
                             Inset="true"
                             Color="white">
                    </MSwitch>
                </MListItemAction>
            </MListItem>
        </MList>
    </MCard>

    @if (!hidePrivacyModeEntrance || privacyMode)
    {
        <div class="text-h6 setting-title">
            @(I18n.T("Setting.Safe.Name"))
        </div>

        <MCard Class="list-item-card"
               Elevation="0"
               Rounded="@("lg")">
            <MListItem OnClick="TryToPrivacyMode">
                <MListItemIcon>
                    <MIcon Class="list-item-icon">
                        mdi-hexagon-slice-3
                    </MIcon>
                </MListItemIcon>
                <MListItemContent>
                    @(I18n.T("PrivacyMode.Name"))
                </MListItemContent>
                <MListItemAction>
                    <MIcon>mdi-chevron-right</MIcon>
                </MListItemAction>
            </MListItem>
        </MCard>
    }
</ScrollContainer>

<MDialogExtension @bind-MyValue="showClearCache"
                  ContentClass="rounded-lg"
                  MaxWidth="420">
    <MCard>
        <MCardTitle Class="font-weight-bold">
            @(I18n.T("Setting.General.Storage.Name"))
        </MCardTitle>
        <MCardText Class="pb-0">
            @(I18n.T("Storage.Content"))
        </MCardText>
        <MCardActions>
            <MSpacer></MSpacer>
            <MButton Text="true"
                     OnClick="()=>showClearCache=false">
                @(I18n.T("Share.Cancel"))
            </MButton>
            <MButton Text="true"
                     Color="red"
                     OnClick="ClearCache">
                @(I18n.T("Share.OK"))
            </MButton>
        </MCardActions>
    </MCard>
</MDialogExtension>

@if (!hidePrivacyModeEntrance || privacyMode)
{
    <InputDialog @bind-Visible="showprivacyModeEntrancePasswordDialog"
                 Title="@(I18n.T("PrivacyMode.ValidatePassword"))"
                 Placeholder="@(I18n.T("Please input a password"))"
                 MaxLength="20"
                 Password="true"
                 OnOK="InputPassword"
                 OKText="@(I18n.T("Share.OK"))">
    </InputDialog>
}
